diff --git a/acuity-ovxlib-dev/build_vx.sh b/acuity-ovxlib-dev/build_vx.sh
index 46f2f608..10e5fd88 100755
--- a/acuity-ovxlib-dev/build_vx.sh
+++ b/acuity-ovxlib-dev/build_vx.sh
@@ -24,9 +24,26 @@ export VIVANTE_SDK_INC=$SDK_DIR/include
 export VIVANTE_SDK_LIB=$SDK_DIR/drivers
 export OVXLIB_DIR=/$AQROOT/acuity-ovxlib-dev
 
+TOOLCHAIN_DIR=/mnt/fileroot/shengken.lin/workspace/a5_buildroot/toolchain/gcc/linux-x86/aarch64/gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu
+CROSS=${TOOLCHAIN_DIR}/bin/aarch64-linux-gnu-
+
 case "$ARCH" in
 
 arm64)
+    ARCH=arm64
+    export ARCH_TYPE=arm64
+    export CPU_TYPE=cortex-a53
+    export CPU_ARCH=armv8-a
+    export FIXED_ARCH_TYPE=arm64
+
+    #export KERNEL_DIR=/mnt/fileroot/shengken.lin/workspace/a5_buildroot/output/a5_av400_a6432_release/build/linux-amlogic-5.4-dev/
+    export CROSS_COMPILE=$CROSS
+    export TOOLCHAIN=${TOOLCHAIN_DIR}/bin
+    export LIB_DIR=${TOOLCHAIN_DIR}/lib
+    export PATH=$TOOLCHAIN:$PATH
+    ;;
+
+arm64-debug)
     ARCH=arm64
     export ARCH_TYPE=$ARCH
     export CPU_TYPE=cortex-a53
diff --git a/build_ml.sh b/build_ml.sh
index 279f0892..f3566bd1 100755
--- a/build_ml.sh
+++ b/build_ml.sh
@@ -22,8 +22,25 @@ export AQARCH=$AQROOT/arch/XAQ2
 
 export SDK_DIR=$AQROOT/build/sdk
 
+TOOLCHAIN_DIR=/mnt/fileroot/shengken.lin/workspace/a5_buildroot/toolchain/gcc/linux-x86/aarch64/gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu
+CROSS=${TOOLCHAIN_DIR}/bin/aarch64-linux-gnu-
+
 case "$ARCH" in
 
+arm64)
+    ARCH=arm64
+    export ARCH_TYPE=arm64
+    export CPU_TYPE=cortex-a53
+    export CPU_ARCH=armv8-a
+    export FIXED_ARCH_TYPE=arm64
+
+    export KERNEL_DIR=/mnt/fileroot/shengken.lin/workspace/a5_buildroot/output/a5_av400_a6432_release/build/linux-amlogic-5.4-dev/
+    export CROSS_COMPILE=$CROSS
+    export TOOLCHAIN=${TOOLCHAIN_DIR}/bin
+    export LIB_DIR=${TOOLCHAIN_DIR}/lib
+    export PATH=$TOOLCHAIN:$PATH
+    ;;
+
 arm)
     export ARCH_TYPE=$ARCH
     export CPU_TYPE=arm920
@@ -35,7 +52,7 @@ arm)
     export LIB_DIR=$TOOLCHAIN/arm-none-linux-gnueabi/libc/usr/lib
 ;;
 
-arm64)
+arm64-debug)
     ARCH=arm64
     export ARCH_TYPE=$ARCH
     export CPU_TYPE=cortex-a53
@@ -379,7 +396,9 @@ export PATH=$TOOLCHAIN:$PATH
 # build results will save to $SDK_DIR/
 #
 cd $AQROOT; make -j1 -f makefile.linux $BUILD_OPTIONS clean
-cd $AQROOT; make -j1 CC=${cc_clang} HOSTCC=${cc_clang} LD=${CROSS_COMPILE}ld.lld NM=${TOOLCHAIN}/llvm-nm OBJCOPY=${TOOLCHAIN}/llvm-objcopy CLANG_TRIPLE=${CLANG_TRIPLE} CROSS_COMPILE=${CROSS_COMPILE} -f makefile.linux $BUILD_OPTIONS install 2>&1 | tee $AQROOT/linux_build.log
+cd $AQROOT; make -j64 -f makefile.linux $BUILD_OPTIONS install 2>&1 | tee $AQROOT/linux_build.log
+#cd $AQROOT; make -j1 -f makefile.linux $BUILD_OPTIONS clean
+#cd $AQROOT; make -j1 CC=${cc_clang} HOSTCC=${cc_clang} LD=${CROSS_COMPILE}ld.lld NM=${TOOLCHAIN}/llvm-nm OBJCOPY=${TOOLCHAIN}/llvm-objcopy CLANG_TRIPLE=${CLANG_TRIPLE} CROSS_COMPILE=${CROSS_COMPILE} -f makefile.linux $BUILD_OPTIONS install 2>&1 | tee $AQROOT/linux_build.log
 
 ########################################################
 # clean/build acuity-ovxlib-dev
diff --git a/hal/os/linux/kernel/platform/amlogic/gc_hal_kernel_platform_amlogic.c b/hal/os/linux/kernel/platform/amlogic/gc_hal_kernel_platform_amlogic.c
index 907230ec..ad2c9bbb 100755
--- a/hal/os/linux/kernel/platform/amlogic/gc_hal_kernel_platform_amlogic.c
+++ b/hal/os/linux/kernel/platform/amlogic/gc_hal_kernel_platform_amlogic.c
@@ -93,6 +93,9 @@ module_param(hardwareResetNum, int, 0644);
 static int nanoqFreq = 800000000;
 module_param(nanoqFreq, int, 0644);
 
+static struct clk *npu_axi_clk = NULL;
+static struct clk *npu_core_clk = NULL;
+
 gceSTATUS _InitDtsRegValue(IN gcsPLATFORM *Platform)
 {
     int ret = 0;
@@ -253,8 +256,6 @@ void delay(uint32_t time)
 /* dynamic set clock function */
 static void set_clock(struct platform_device *pdev)
 {
-    struct clk *npu_axi_clk = NULL;
-    struct clk *npu_core_clk = NULL;
     npu_axi_clk = clk_get(&pdev->dev, "cts_vipnanoq_axi_clk_composite");
     if (IS_ERR(npu_axi_clk))
    {
@@ -282,6 +283,39 @@ static void set_clock(struct platform_device *pdev)
     clk_put(npu_core_clk);
     return;
 }
+static void put_clock(struct platform_device *pdev)
+{
+    if (!IS_ERR(npu_axi_clk)) {
+        devm_clk_put(&pdev->dev,npu_axi_clk);
+    }
+    if (!IS_ERR(npu_core_clk)) {
+        devm_clk_put(&pdev->dev,npu_core_clk);
+    }
+}
+
+static int clk_switch(int flag)
+{
+    if ((!npu_axi_clk) || (!npu_core_clk))
+    {
+        return -1;
+    }
+
+    if (flag)
+    {
+        clk_prepare_enable(npu_axi_clk);
+        clk_set_rate(npu_axi_clk,nanoqFreq);
+
+        clk_prepare_enable(npu_core_clk);
+        clk_set_rate(npu_core_clk,nanoqFreq);
+    }
+    else
+    {
+        clk_disable_unprepare(npu_axi_clk);
+        clk_disable_unprepare(npu_core_clk);
+    }
+
+    return 0;
+}
 #if (LINUX_VERSION_CODE == KERNEL_VERSION(4, 9, 99))
 #define AO_RTI_BASE           0xff800000
 #define AO_RTI_GEN_PWR_SLEEP0 (AO_RTI_BASE + (0x3a<<2))   //0xff8000e8
@@ -371,6 +405,14 @@ void Getpower_be(struct platform_device *pdev)
     set_clock(pdev);
     return;
 }
+
+void Getpower_0x1000000e(struct platform_device *pdev)
+{
+    /*A5 added power domain, it will get domain power when prob*/
+    set_clock(pdev);
+    return;
+}
+
 /* Downpower: disable nna power for platform */
 
 void Downpower_88(void)
@@ -416,6 +458,14 @@ void Downpower_be(void)
     /*C2 added power domain, it will down domain power when rmmod */
     return;
 }
+
+void Downpower_0x1000000e(struct platform_device *pdev)
+{
+    /*A5 added power domain, it will down domain power when rmmod */
+    put_clock(pdev);
+    return;
+}
+
 /* Runtime power manage */
 void Runtime_getpower_88(struct platform_device *pdev)
 {
@@ -461,6 +511,24 @@ void Runtime_downpower_be(struct platform_device *pdev)
     pm_runtime_put_sync(&pdev->dev);
     pm_runtime_disable(&pdev->dev);
 }
+
+void Runtime_getpower_0x1000000e(struct platform_device *pdev)
+{
+    int ret;
+
+    pm_runtime_enable(&pdev->dev);
+    ret = pm_runtime_get_sync(&pdev->dev);
+    if (ret < 0) printk("===runtime getpower error===\n");
+    clk_switch(1);
+}
+void Runtime_downpower_0x1000000e(struct platform_device *pdev)
+{
+
+    pm_runtime_put_sync(&pdev->dev);
+    pm_runtime_disable(&pdev->dev);
+    clk_switch(0);
+}
+
 gceSTATUS _GetPower(IN gcsPLATFORM *Platform)
 {
     struct platform_device *pdev = Platform->device;
@@ -481,6 +549,10 @@ gceSTATUS _GetPower(IN gcsPLATFORM *Platform)
             nanoqFreq=666*1024*1024;
             Getpower_be(pdev);
             break;
+        case 6:
+            nanoqFreq=800*1024*1024;
+            Getpower_0x1000000e(pdev);
+            break;
         default:
             printk("not find power_version\n");
     }
@@ -506,6 +578,9 @@ gceSTATUS  _SetPower(IN gcsPLATFORM * Platform,IN gceCORE GPU,IN gctBOOL Enable)
             case 4:
                 Runtime_downpower_be(pdev);
                 break;
+            case 6:
+                Runtime_downpower_0x1000000e(pdev);
+                break;
             default:
                 printk("not find power_version\n");
         }
@@ -526,6 +601,10 @@ gceSTATUS  _SetPower(IN gcsPLATFORM * Platform,IN gceCORE GPU,IN gctBOOL Enable)
             case 4:
                 Runtime_getpower_be(pdev);
                 break;
+            case 6:
+                Runtime_getpower_0x1000000e(pdev);
+                mdelay(1);
+                break;
             default:
                 printk("not find power_version\n");
         }
@@ -558,6 +637,11 @@ gceSTATUS _Reset(IN gcsPLATFORM * Platform, IN gceCORE GPU)
             mdelay(10);
             Runtime_getpower_be(pdev);
             break;
+        case 6:
+            Runtime_downpower_0x1000000e(pdev);
+            mdelay(10);
+            Runtime_getpower_0x1000000e(pdev);
+            break;
         default:
             printk("not find power_version\n");
     }
@@ -574,6 +658,7 @@ gceSTATUS _Reset(IN gcsPLATFORM * Platform, IN gceCORE GPU)
 
 gceSTATUS _DownPower(IN gcsPLATFORM *Platform)
 {
+    struct platform_device *pdev = Platform->device;
     switch (nn_power_version)
     {
         case 1:
@@ -588,6 +673,9 @@ gceSTATUS _DownPower(IN gcsPLATFORM *Platform)
         case 4:
             Downpower_be();
             break;
+        case 6:
+            Downpower_0x1000000e(pdev);
+            break;
         default:
             printk("not find power_version\n");
     }
